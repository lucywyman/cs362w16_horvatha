        -:    0:Source:playdom.c
        -:    0:Graph:playdom.gcno
        -:    0:Data:playdom.gcda
        -:    0:Runs:14
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include <stdio.h>
        -:    3:#include "rngs.h"
        -:    4:#include <stdlib.h>
        -:    5:
       14:    6:int main (int argc, char** argv) {
        -:    7:  struct gameState G;
       14:    8:  struct gameState *p = &G;
        -:    9:
        -:   10:  int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, 
       14:   11:	       sea_hag, tribute, smithy};
        -:   12:
       14:   13:  printf ("Starting game.\n");
        -:   14:  
       14:   15:  initializeGame(2, k, atoi(argv[1]), p);
        -:   16:  
       14:   17:  int money = 0;
       14:   18:  int smithyPos = -1;
       14:   19:  int adventurerPos = -1;
       14:   20:  int i=0;
        -:   21:
       14:   22:  int numSmithies = 0;
       14:   23:  int numAdventurers = 0;
        -:   24:
      518:   25:  while (!isGameOver(p)) {
      490:   26:    money = 0;
      490:   27:    smithyPos = -1;
      490:   28:    adventurerPos = -1;
     2940:   29:    for (i = 0; i < numHandCards(p); i++) {
     2450:   30:      if (handCard(i, p) == copper)
     1176:   31:    money++;
     1274:   32:      else if (handCard(i, p) == silver)
      392:   33:    money += 2;
      882:   34:      else if (handCard(i, p) == gold)
      210:   35:    money += 3;
      672:   36:      else if (handCard(i, p) == smithy)
       28:   37:    smithyPos = i;
      644:   38:      else if (handCard(i, p) == adventurer)
       70:   39:    adventurerPos = i;
        -:   40:    }
        -:   41:
      490:   42:    if (whoseTurn(p) == 0) {
      252:   43:      if (smithyPos != -1) {
       28:   44:        printf("0: smithy played from position %d\n", smithyPos); 
       28:   45:	playCard(smithyPos, -1, -1, -1, p); 
       28:   46:	printf("smithy played.\n");
       28:   47:	money = 0;
       28:   48:	i=0;
      280:   49:	while(i<numHandCards(p)){
      224:   50:	  if (handCard(i, p) == copper){
      140:   51:	    playCard(i, -1, -1, -1, p);
      140:   52:	    money++;
        -:   53:	  }
       84:   54:	  else if (handCard(i, p) == silver){
       28:   55:	    playCard(i, -1, -1, -1, p);
       28:   56:	    money += 2;
        -:   57:	  }
       56:   58:	  else if (handCard(i, p) == gold){
       14:   59:	    playCard(i, -1, -1, -1, p);
       14:   60:	    money += 3;
        -:   61:	  }
      224:   62:	  i++;
        -:   63:	}
        -:   64:      }
        -:   65:
      252:   66:      if (money >= 8) {
       56:   67:        printf("0: bought province\n"); 
       56:   68:        buyCard(province, p);
        -:   69:      }
      196:   70:      else if (money >= 6) {
      112:   71:        printf("0: bought gold\n"); 
      112:   72:        buyCard(gold, p);
        -:   73:      }
      112:   74:      else if ((money >= 4) && (numSmithies < 2)) {
       28:   75:        printf("0: bought smithy\n"); 
       28:   76:        buyCard(smithy, p);
       28:   77:        numSmithies++;
        -:   78:      }
       56:   79:      else if (money >= 3) {
       42:   80:        printf("0: bought silver\n"); 
       42:   81:        buyCard(silver, p);
        -:   82:      }
        -:   83:
      252:   84:      printf("0: end turn\n");
      252:   85:      endTurn(p);
        -:   86:    }
        -:   87:    else {
      238:   88:      if (adventurerPos != -1) {
       70:   89:        printf("1: adventurer played from position %d\n", adventurerPos);
       70:   90:	playCard(adventurerPos, -1, -1, -1, p); 
       70:   91:	money = 0;
       70:   92:	i=0;
      630:   93:	while(i<numHandCards(p)){
      490:   94:	  if (handCard(i, p) == copper){
      182:   95:	    playCard(i, -1, -1, -1, p);
      182:   96:	    money++;         
        -:   97:	  }
      308:   98:	  else if (handCard(i, p) == silver){
      154:   99:	    playCard(i, -1, -1, -1, p);
      154:  100:	    money += 2;
        -:  101:	  }
      154:  102:	  else if (handCard(i, p) == gold){
       42:  103:	    playCard(i, -1, -1, -1, p);
       42:  104:	    money += 3;
        -:  105:	  }
      490:  106:	  i++;
        -:  107:	}
        -:  108:      }
        -:  109:
      238:  110:      if (money >= 8) {
       56:  111:        printf("1: bought province\n");
       56:  112:        buyCard(province, p);
        -:  113:      }
      210:  114:      else if ((money >= 6) && (numAdventurers < 2)) {
       28:  115:        printf("1: bought adventurer\n");
       28:  116:	buyCard(adventurer, p);
       28:  117:	numAdventurers++;
      154:  118:      }else if (money >= 6){
       56:  119:        printf("1: bought gold\n");
       56:  120:	    buyCard(gold, p);
        -:  121:        }
       98:  122:      else if (money >= 3){
       98:  123:        printf("1: bought silver\n");
       98:  124:	    buyCard(silver, p);
        -:  125:      }
      238:  126:      printf("1: endTurn\n");
        -:  127:      
      238:  128:      endTurn(p);      
        -:  129:    }
        -:  130:
      490:  131:      printf ("Player 0: %d\nPlayer 1: %d\n", scoreFor(0, p), scoreFor(1, p));
        -:  132:	    
        -:  133:  } // end of While
        -:  134:
       14:  135:  printf ("Finished game.\n");
       14:  136:  printf ("Player 0: %d\nPlayer 1: %d\n", scoreFor(0, p), scoreFor(1, p));
        -:  137:
       14:  138:  return 0;
        -:  139:}
